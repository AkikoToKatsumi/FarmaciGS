# Docker configuration for Farmacia GS
version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: farmacia_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: farmaciagsdb
      POSTGRES_USER: farmacia_user
      POSTGRES_PASSWORD: farmacia_secure_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=es_ES.UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./farmaciagsdb.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - farmacia_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U farmacia_user -d farmaciagsdb"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Node.js
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: farmacia_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 4004
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: Farmaciadb
      DB_USER: postgres
      DB_PASSWORD: 1234
      JWT_SECRET: 12345
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost}
    ports:
      - "4004:4004"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - farmacia_network
    volumes:
      - backend_logs:/app/logs
      - backend_uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4004/api/test"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React (para desarrollo)
  frontend:
    build:
      context: ./desktop-app
      dockerfile: Dockerfile
    container_name: farmacia_frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:4004
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - farmacia_network

  # Nginx (Proxy reverso y servidor est√°tico)
  nginx:
    image: nginx:alpine
    container_name: farmacia_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - farmacia_network

  # Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    container_name: farmacia_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - farmacia_network
    command: redis-server --appendonly yes

volumes:
  postgres_data:
    driver: local
  backend_logs:
    driver: local
  backend_uploads:
    driver: local
  nginx_logs:
    driver: local
  redis_data:
    driver: local

networks:
  farmacia_network:
    driver: bridge
