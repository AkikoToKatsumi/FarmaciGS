-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.audit_log
(
    id serial NOT NULL,
    user_id integer,
    action text COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT audit_log_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.clients
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default",
    phone character varying(20) COLLATE pg_catalog."default",
    cedula character varying(20) COLLATE pg_catalog."default",
    rnc character varying(20) COLLATE pg_catalog."default",
    address text COLLATE pg_catalog."default",
    CONSTRAINT clients_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.employees
(
    user_id integer,
    hire_date date,
    salary numeric,
    status character varying(20) COLLATE pg_catalog."default",
    name character varying(100) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default",
    "position" character varying(100) COLLATE pg_catalog."default",
    department character varying(100) COLLATE pg_catalog."default",
    contracttype character varying(20) COLLATE pg_catalog."default",
    schedule character varying(100) COLLATE pg_catalog."default",
    startdate date,
    phone character varying(20) COLLATE pg_catalog."default",
    address text COLLATE pg_catalog."default"
);

CREATE TABLE IF NOT EXISTS public.medicine
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    stock integer DEFAULT 0,
    price numeric(10, 2),
    provider_id integer,
    expiration_date date,
    minimum_stock integer DEFAULT 10,
    barcode character varying(100) COLLATE pg_catalog."default",
    lot character varying(100) COLLATE pg_catalog."default",
    category character varying(100) COLLATE pg_catalog."default",
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT medicine_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.permissions
(
    id serial NOT NULL,
    role_id integer,
    action character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT permissions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.prescription_medicines
(
    prescription_id integer NOT NULL,
    medicine_id integer NOT NULL,
    quantity integer,
    CONSTRAINT prescription_medicines_pkey PRIMARY KEY (prescription_id, medicine_id)
);

CREATE TABLE IF NOT EXISTS public.prescriptions
(
    id serial NOT NULL,
    client_id integer,
    issued_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT prescriptions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.providers
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default",
    phone character varying(20) COLLATE pg_catalog."default",
    tax_id character varying COLLATE pg_catalog."default",
    CONSTRAINT providers_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.returns
(
    id serial NOT NULL,
    sale_id integer,
    user_id integer,
    amount numeric(12, 2) NOT NULL,
    reason text COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now(),
    CONSTRAINT returns_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    id serial NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT roles_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.sale_items
(
    id serial NOT NULL,
    sale_id integer NOT NULL,
    medicine_id integer NOT NULL,
    quantity integer NOT NULL,
    unit_price numeric(10, 2) NOT NULL,
    total_price numeric(10, 2) NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT sale_items_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.sales
(
    id serial NOT NULL,
    user_id integer,
    client_id integer,
    total numeric(10, 2),
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    status character varying(20) COLLATE pg_catalog."default" DEFAULT 'completed'::character varying,
    itbis numeric(10, 2),
    subtotal numeric(10, 2),
    rnc character varying(15) COLLATE pg_catalog."default",
    payment_method character varying(30) COLLATE pg_catalog."default",
    CONSTRAINT sales_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    role_id integer,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_key UNIQUE (email)
);

ALTER TABLE IF EXISTS public.audit_log
    ADD CONSTRAINT audit_log_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.employees
    ADD CONSTRAINT employees_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.medicine
    ADD CONSTRAINT medicine_provider_id_fkey FOREIGN KEY (provider_id)
    REFERENCES public.providers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.permissions
    ADD CONSTRAINT permissions_role_id_fkey FOREIGN KEY (role_id)
    REFERENCES public.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.prescription_medicines
    ADD CONSTRAINT prescription_medicines_medicine_id_fkey FOREIGN KEY (medicine_id)
    REFERENCES public.medicine (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.prescription_medicines
    ADD CONSTRAINT prescription_medicines_prescription_id_fkey FOREIGN KEY (prescription_id)
    REFERENCES public.prescriptions (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.prescriptions
    ADD CONSTRAINT prescriptions_client_id_fkey FOREIGN KEY (client_id)
    REFERENCES public.clients (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.returns
    ADD CONSTRAINT returns_sale_id_fkey FOREIGN KEY (sale_id)
    REFERENCES public.sales (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.returns
    ADD CONSTRAINT returns_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.sale_items
    ADD CONSTRAINT fk_medicine FOREIGN KEY (medicine_id)
    REFERENCES public.medicine (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.sale_items
    ADD CONSTRAINT fk_sale FOREIGN KEY (sale_id)
    REFERENCES public.sales (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.sale_items
    ADD CONSTRAINT sale_items_medicine_id_fkey FOREIGN KEY (medicine_id)
    REFERENCES public.medicine (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.sale_items
    ADD CONSTRAINT sale_items_sale_id_fkey FOREIGN KEY (sale_id)
    REFERENCES public.sales (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.sales
    ADD CONSTRAINT sales_client_id_fkey FOREIGN KEY (client_id)
    REFERENCES public.clients (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.sales
    ADD CONSTRAINT sales_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT users_role_id_fkey FOREIGN KEY (role_id)
    REFERENCES public.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;

END;